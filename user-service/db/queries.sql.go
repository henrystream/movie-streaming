// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: queries.sql

package db

import (
	"context"
)

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT id, email, password, membership_type FROM users WHERE email = $1
`

func (q *Queries) GetUserByEmail(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRow(ctx, getUserByEmail, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Password,
		&i.MembershipType,
	)
	return i, err
}

const registerUser = `-- name: RegisterUser :one
INSERT INTO users (email, password, membership_type)
VALUES ($1, $2, $3)
RETURNING id, email, membership_type
`

type RegisterUserParams struct {
	Email          string
	Password       string
	MembershipType string
}

type RegisterUserRow struct {
	ID             int32
	Email          string
	MembershipType string
}

func (q *Queries) RegisterUser(ctx context.Context, arg RegisterUserParams) (RegisterUserRow, error) {
	row := q.db.QueryRow(ctx, registerUser, arg.Email, arg.Password, arg.MembershipType)
	var i RegisterUserRow
	err := row.Scan(&i.ID, &i.Email, &i.MembershipType)
	return i, err
}
